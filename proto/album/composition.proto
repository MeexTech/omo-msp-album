syntax = "proto3";

package omo.msp.album;
option go_package= "proto/album";
import "proto/album/common.proto";

service CompositionService {
  rpc AddOne(ReqCompositionAdd) returns (ReplyCompositionInfo) {}
  rpc UpdateBase(ReqCompositionUpdate) returns (ReplyInfo) {}
  rpc RemoveOne(RequestInfo) returns (ReplyInfo) {}
  rpc GetOne(RequestInfo) returns (ReplyCompositionInfo) {}
  rpc Search(RequestInfo) returns (ReplyCompositionList) {}
  rpc GetListBy(RequestFilter) returns (ReplyCompositionList) {}
  rpc GetStatistic(RequestFilter) returns (ReplyStatistic) {}
  rpc UpdateBy(RequestUpdate) returns (ReplyInfo) {}
  rpc SetSlot(ReqCompositionSlots) returns (ReplyCompositionSlots){}
}

message CompositionInfo {
  string uid = 1;
  uint64 id = 2;
  int64 created = 3;
  int64 updated = 4;
  string creator = 5;
  string operator = 6;

  string name = 7;
  string remark = 8;
  string owner = 9;
  uint32 aspect = 10;

  repeated SlotInfo slots = 21;
}

message SlotInfo{
  uint32 index = 1;
  int32 x = 2;
  int32 y = 3;
  uint32 width = 4;
  uint32 height = 5;
  uint32 type = 6;
}

message ReqCompositionAdd {
  string name = 1;
  string remark = 2;
  string operator = 3;
  uint32 aspect = 4;
  string owner = 5;
}

message ReqCompositionUpdate{
  string uid = 1;
  string name = 2;
  string remark = 3;
  string operator = 4;
  uint32 aspect = 5;
}

message ReqCompositionSlots{
  string uid = 1;
  string operator = 2;
  repeated SlotInfo slots = 3;
}

message ReplyCompositionSlots{
  ReplyStatus status = 1;
  repeated SlotInfo list = 11;
}

message ReplyCompositionInfo{
  ReplyStatus status = 1;
  CompositionInfo info = 2;
}

message ReplyCompositionList{
  ReplyStatus status = 1;
  repeated CompositionInfo list = 2;
}
