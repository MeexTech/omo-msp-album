// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/album/exhibit.proto

package album

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExhibitInfo struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id                   uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Created              int64    `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated              int64    `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
	Creator              string   `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator             string   `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	Cover                string   `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	Type                 uint32   `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Status               uint32   `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	Owner                string   `protobuf:"bytes,12,opt,name=owner,proto3" json:"owner,omitempty"`
	Assets               []string `protobuf:"bytes,13,rep,name=assets,proto3" json:"assets,omitempty"`
	Tags                 []string `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExhibitInfo) Reset()         { *m = ExhibitInfo{} }
func (m *ExhibitInfo) String() string { return proto.CompactTextString(m) }
func (*ExhibitInfo) ProtoMessage()    {}
func (*ExhibitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5715d3ed240d056, []int{0}
}

func (m *ExhibitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExhibitInfo.Unmarshal(m, b)
}
func (m *ExhibitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExhibitInfo.Marshal(b, m, deterministic)
}
func (m *ExhibitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExhibitInfo.Merge(m, src)
}
func (m *ExhibitInfo) XXX_Size() int {
	return xxx_messageInfo_ExhibitInfo.Size(m)
}
func (m *ExhibitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExhibitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExhibitInfo proto.InternalMessageInfo

func (m *ExhibitInfo) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ExhibitInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExhibitInfo) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ExhibitInfo) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ExhibitInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ExhibitInfo) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ExhibitInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExhibitInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ExhibitInfo) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ExhibitInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ExhibitInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ExhibitInfo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ExhibitInfo) GetAssets() []string {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *ExhibitInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ReqExhibitAdd struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	Operator             string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Cover                string   `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Owner                string   `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqExhibitAdd) Reset()         { *m = ReqExhibitAdd{} }
func (m *ReqExhibitAdd) String() string { return proto.CompactTextString(m) }
func (*ReqExhibitAdd) ProtoMessage()    {}
func (*ReqExhibitAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5715d3ed240d056, []int{1}
}

func (m *ReqExhibitAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqExhibitAdd.Unmarshal(m, b)
}
func (m *ReqExhibitAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqExhibitAdd.Marshal(b, m, deterministic)
}
func (m *ReqExhibitAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqExhibitAdd.Merge(m, src)
}
func (m *ReqExhibitAdd) XXX_Size() int {
	return xxx_messageInfo_ReqExhibitAdd.Size(m)
}
func (m *ReqExhibitAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqExhibitAdd.DiscardUnknown(m)
}

var xxx_messageInfo_ReqExhibitAdd proto.InternalMessageInfo

func (m *ReqExhibitAdd) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqExhibitAdd) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqExhibitAdd) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ReqExhibitAdd) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ReqExhibitAdd) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ReqExhibitUpdate struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Cover                string   `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Operator             string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqExhibitUpdate) Reset()         { *m = ReqExhibitUpdate{} }
func (m *ReqExhibitUpdate) String() string { return proto.CompactTextString(m) }
func (*ReqExhibitUpdate) ProtoMessage()    {}
func (*ReqExhibitUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5715d3ed240d056, []int{2}
}

func (m *ReqExhibitUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqExhibitUpdate.Unmarshal(m, b)
}
func (m *ReqExhibitUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqExhibitUpdate.Marshal(b, m, deterministic)
}
func (m *ReqExhibitUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqExhibitUpdate.Merge(m, src)
}
func (m *ReqExhibitUpdate) XXX_Size() int {
	return xxx_messageInfo_ReqExhibitUpdate.Size(m)
}
func (m *ReqExhibitUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqExhibitUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ReqExhibitUpdate proto.InternalMessageInfo

func (m *ReqExhibitUpdate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReqExhibitUpdate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqExhibitUpdate) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqExhibitUpdate) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ReqExhibitUpdate) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type ReplyExhibitInfo struct {
	Status               *ReplyStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *ExhibitInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyExhibitInfo) Reset()         { *m = ReplyExhibitInfo{} }
func (m *ReplyExhibitInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyExhibitInfo) ProtoMessage()    {}
func (*ReplyExhibitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5715d3ed240d056, []int{3}
}

func (m *ReplyExhibitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyExhibitInfo.Unmarshal(m, b)
}
func (m *ReplyExhibitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyExhibitInfo.Marshal(b, m, deterministic)
}
func (m *ReplyExhibitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyExhibitInfo.Merge(m, src)
}
func (m *ReplyExhibitInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyExhibitInfo.Size(m)
}
func (m *ReplyExhibitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyExhibitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyExhibitInfo proto.InternalMessageInfo

func (m *ReplyExhibitInfo) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyExhibitInfo) GetInfo() *ExhibitInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ReplyExhibitList struct {
	Status               *ReplyStatus   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*ExhibitInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReplyExhibitList) Reset()         { *m = ReplyExhibitList{} }
func (m *ReplyExhibitList) String() string { return proto.CompactTextString(m) }
func (*ReplyExhibitList) ProtoMessage()    {}
func (*ReplyExhibitList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5715d3ed240d056, []int{4}
}

func (m *ReplyExhibitList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyExhibitList.Unmarshal(m, b)
}
func (m *ReplyExhibitList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyExhibitList.Marshal(b, m, deterministic)
}
func (m *ReplyExhibitList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyExhibitList.Merge(m, src)
}
func (m *ReplyExhibitList) XXX_Size() int {
	return xxx_messageInfo_ReplyExhibitList.Size(m)
}
func (m *ReplyExhibitList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyExhibitList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyExhibitList proto.InternalMessageInfo

func (m *ReplyExhibitList) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyExhibitList) GetList() []*ExhibitInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*ExhibitInfo)(nil), "omo.msp.album.ExhibitInfo")
	proto.RegisterType((*ReqExhibitAdd)(nil), "omo.msp.album.ReqExhibitAdd")
	proto.RegisterType((*ReqExhibitUpdate)(nil), "omo.msp.album.ReqExhibitUpdate")
	proto.RegisterType((*ReplyExhibitInfo)(nil), "omo.msp.album.ReplyExhibitInfo")
	proto.RegisterType((*ReplyExhibitList)(nil), "omo.msp.album.ReplyExhibitList")
}

func init() {
	proto.RegisterFile("proto/album/exhibit.proto", fileDescriptor_c5715d3ed240d056)
}

var fileDescriptor_c5715d3ed240d056 = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x4f, 0xdb, 0x4c,
	0x10, 0xc6, 0x76, 0x62, 0x60, 0x42, 0xf2, 0xa2, 0xd5, 0xab, 0x6a, 0x1b, 0x15, 0x11, 0xf9, 0x94,
	0x53, 0x90, 0xe8, 0x2f, 0x08, 0x15, 0x44, 0xa9, 0x5a, 0x55, 0x72, 0xd4, 0x4b, 0x6f, 0x8e, 0x3d,
	0xc0, 0xaa, 0xb1, 0xd7, 0xec, 0x6e, 0xd2, 0x72, 0x6d, 0x7f, 0x5c, 0xd5, 0x7f, 0x55, 0xed, 0xd8,
	0xb8, 0x0e, 0x38, 0x24, 0xa2, 0xb7, 0x7d, 0xe6, 0xe3, 0x99, 0x67, 0x3e, 0x64, 0xc3, 0xeb, 0x5c,
	0x49, 0x23, 0xcf, 0xa2, 0xc5, 0x7c, 0x99, 0x9e, 0xe1, 0xf7, 0x5b, 0x31, 0x17, 0x66, 0x44, 0x36,
	0xd6, 0x95, 0xa9, 0x1c, 0xa5, 0x3a, 0x1f, 0x91, 0xb3, 0xcf, 0xeb, 0x91, 0xb1, 0x4c, 0x53, 0x99,
	0x15, 0x81, 0xc1, 0x6f, 0x17, 0x3a, 0x97, 0x45, 0xea, 0x34, 0xbb, 0x96, 0xec, 0x18, 0xbc, 0xa5,
	0x48, 0xb8, 0x33, 0x70, 0x86, 0x87, 0xa1, 0x7d, 0xb2, 0x1e, 0xb8, 0x22, 0xe1, 0xee, 0xc0, 0x19,
	0xb6, 0x42, 0x57, 0x24, 0x8c, 0xc3, 0x7e, 0xac, 0x30, 0x32, 0x98, 0x70, 0x6f, 0xe0, 0x0c, 0xbd,
	0xf0, 0x01, 0x5a, 0xcf, 0x32, 0x4f, 0xc8, 0xd3, 0x2a, 0x3c, 0x25, 0xac, 0x72, 0xa4, 0xe2, 0x6d,
	0x62, 0x7e, 0x80, 0xac, 0x0f, 0x07, 0x32, 0x47, 0x45, 0x2e, 0x9f, 0x5c, 0x15, 0x66, 0x0c, 0x5a,
	0x59, 0x94, 0x22, 0xdf, 0x27, 0x3b, 0xbd, 0xd9, 0x2b, 0xf0, 0x15, 0xa6, 0x91, 0xfa, 0xca, 0x0f,
	0xc8, 0x5a, 0x22, 0xf6, 0x3f, 0xb4, 0x63, 0xb9, 0x42, 0xc5, 0x0f, 0xc9, 0x5c, 0x00, 0xcb, 0x60,
	0xee, 0x73, 0xe4, 0x30, 0x70, 0x86, 0xdd, 0x90, 0xde, 0x96, 0x41, 0x9b, 0xc8, 0x2c, 0x35, 0xef,
	0x90, 0xb5, 0x44, 0x96, 0x41, 0x7e, 0xcb, 0x50, 0xf1, 0xa3, 0x82, 0x81, 0x80, 0x8d, 0x8e, 0xb4,
	0x46, 0xa3, 0x79, 0x77, 0xe0, 0xd9, 0x7a, 0x05, 0x22, 0xe6, 0xe8, 0x46, 0xf3, 0x1e, 0x59, 0xe9,
	0x1d, 0xfc, 0x74, 0xa0, 0x1b, 0xe2, 0x5d, 0x39, 0xce, 0x71, 0x92, 0x54, 0x1d, 0x38, 0x8d, 0x1d,
	0xb8, 0x6b, 0x1d, 0xd4, 0x27, 0xe1, 0x3d, 0x9a, 0x44, 0xd5, 0x5d, 0xab, 0xde, 0x5d, 0xa5, 0xb8,
	0x5d, 0x53, 0x1c, 0xfc, 0x70, 0xe0, 0xf8, 0xaf, 0x8a, 0xcf, 0xb4, 0x81, 0x86, 0xb5, 0x3e, 0x48,
	0x73, 0x1b, 0xa5, 0x79, 0xcd, 0xc3, 0x5d, 0x2b, 0x5f, 0x17, 0xdc, 0x5e, 0x17, 0x1c, 0xac, 0xac,
	0x86, 0x7c, 0x71, 0x5f, 0x3f, 0xad, 0xf3, 0x6a, 0xf0, 0x56, 0x46, 0xe7, 0xbc, 0x3f, 0x5a, 0x3b,
	0xd2, 0x11, 0x25, 0xcc, 0x28, 0xa2, 0x5a, 0xca, 0x08, 0x5a, 0x22, 0xbb, 0x96, 0xa4, 0xf2, 0x69,
	0x46, 0x8d, 0x3d, 0xa4, 0xb8, 0xc7, 0x75, 0x3f, 0x08, 0x6d, 0x5e, 0x5a, 0x77, 0x21, 0xb4, 0xe1,
	0xee, 0xc0, 0xdb, 0x56, 0xd7, 0xc6, 0x9d, 0xff, 0xf2, 0xa1, 0x57, 0x5a, 0x67, 0xa8, 0x56, 0x22,
	0x46, 0x36, 0x05, 0x7f, 0x9c, 0x24, 0x9f, 0x32, 0x64, 0x6f, 0x9e, 0x14, 0xac, 0xdd, 0x48, 0xff,
	0xb4, 0x49, 0x4e, 0xad, 0x42, 0xb0, 0xc7, 0xa6, 0x00, 0xc5, 0x1e, 0x2f, 0x22, 0x8d, 0xec, 0x74,
	0x23, 0x5d, 0x11, 0xd4, 0xe7, 0x4d, 0x8c, 0x25, 0xd5, 0x3b, 0x38, 0x0c, 0x31, 0x95, 0x2b, 0xb4,
	0xc2, 0x9e, 0x4e, 0xe2, 0x6e, 0x89, 0x9a, 0xaa, 0x3e, 0x4b, 0x32, 0x01, 0x7f, 0x82, 0x66, 0x1b,
	0xc3, 0x0e, 0x8d, 0x4d, 0xc0, 0x9f, 0x61, 0xa4, 0xe2, 0xdb, 0x17, 0x13, 0xd9, 0x0d, 0x07, 0x7b,
	0x2c, 0x84, 0xff, 0x26, 0x48, 0xe0, 0xe2, 0xfe, 0x4a, 0x2c, 0x0c, 0xaa, 0xa6, 0xa9, 0x5b, 0xc6,
	0xc2, 0xbb, 0x0b, 0xe7, 0x47, 0x38, 0x9a, 0xa0, 0xb1, 0x87, 0x21, 0xb4, 0x11, 0xf1, 0x16, 0xc2,
	0x93, 0x4d, 0x57, 0x45, 0xc9, 0xc1, 0x1e, 0x7b, 0x0f, 0xbd, 0x72, 0x89, 0x5b, 0x14, 0xee, 0xb0,
	0xc5, 0x29, 0x1c, 0x15, 0x51, 0xc5, 0xd9, 0xb2, 0x93, 0x4d, 0xd3, 0x33, 0x57, 0x8b, 0xe8, 0xe6,
	0x59, 0xaa, 0x4b, 0xe8, 0x8c, 0xf3, 0x1c, 0xb3, 0x64, 0x6c, 0x3f, 0x6c, 0x9b, 0xf6, 0x60, 0x47,
	0xd2, 0x4c, 0x53, 0x0e, 0x6b, 0x02, 0xdd, 0xd9, 0x72, 0x6e, 0x54, 0x14, 0x9b, 0x7f, 0x22, 0xba,
	0xe8, 0x7e, 0xe9, 0xd4, 0x7e, 0x56, 0x73, 0x9f, 0xc0, 0xdb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x3f, 0x7e, 0x09, 0xec, 0xec, 0x06, 0x00, 0x00,
}
