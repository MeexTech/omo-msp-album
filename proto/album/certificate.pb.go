// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/album/certificate.proto

package album

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CertificateInfo struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id                   uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Created              int64    `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated              int64    `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
	Creator              string   `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator             string   `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	Sn                   string   `protobuf:"bytes,7,opt,name=sn,proto3" json:"sn,omitempty"`
	Name                 string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	Image                string   `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	Type                 uint32   `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	Status               uint32   `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Style                string   `protobuf:"bytes,13,opt,name=style,proto3" json:"style,omitempty"`
	Target               string   `protobuf:"bytes,14,opt,name=target,proto3" json:"target,omitempty"`
	Scene                string   `protobuf:"bytes,15,opt,name=scene,proto3" json:"scene,omitempty"`
	Tags                 []string `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateInfo) Reset()         { *m = CertificateInfo{} }
func (m *CertificateInfo) String() string { return proto.CompactTextString(m) }
func (*CertificateInfo) ProtoMessage()    {}
func (*CertificateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_91a7d151df1fda2d, []int{0}
}

func (m *CertificateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateInfo.Unmarshal(m, b)
}
func (m *CertificateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateInfo.Marshal(b, m, deterministic)
}
func (m *CertificateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateInfo.Merge(m, src)
}
func (m *CertificateInfo) XXX_Size() int {
	return xxx_messageInfo_CertificateInfo.Size(m)
}
func (m *CertificateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateInfo proto.InternalMessageInfo

func (m *CertificateInfo) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *CertificateInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CertificateInfo) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *CertificateInfo) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *CertificateInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CertificateInfo) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *CertificateInfo) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *CertificateInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CertificateInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *CertificateInfo) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CertificateInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CertificateInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CertificateInfo) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *CertificateInfo) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *CertificateInfo) GetScene() string {
	if m != nil {
		return m.Scene
	}
	return ""
}

func (m *CertificateInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ReqCertificateAdd struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	Sn                   string   `protobuf:"bytes,3,opt,name=sn,proto3" json:"sn,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Type                 uint32   `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Style                string   `protobuf:"bytes,6,opt,name=style,proto3" json:"style,omitempty"`
	Status               uint32   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Target               string   `protobuf:"bytes,8,opt,name=target,proto3" json:"target,omitempty"`
	Scene                string   `protobuf:"bytes,9,opt,name=scene,proto3" json:"scene,omitempty"`
	Image                string   `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	Tags                 []string `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCertificateAdd) Reset()         { *m = ReqCertificateAdd{} }
func (m *ReqCertificateAdd) String() string { return proto.CompactTextString(m) }
func (*ReqCertificateAdd) ProtoMessage()    {}
func (*ReqCertificateAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_91a7d151df1fda2d, []int{1}
}

func (m *ReqCertificateAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCertificateAdd.Unmarshal(m, b)
}
func (m *ReqCertificateAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCertificateAdd.Marshal(b, m, deterministic)
}
func (m *ReqCertificateAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCertificateAdd.Merge(m, src)
}
func (m *ReqCertificateAdd) XXX_Size() int {
	return xxx_messageInfo_ReqCertificateAdd.Size(m)
}
func (m *ReqCertificateAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCertificateAdd.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCertificateAdd proto.InternalMessageInfo

func (m *ReqCertificateAdd) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqCertificateAdd) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqCertificateAdd) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *ReqCertificateAdd) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ReqCertificateAdd) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqCertificateAdd) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *ReqCertificateAdd) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqCertificateAdd) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ReqCertificateAdd) GetScene() string {
	if m != nil {
		return m.Scene
	}
	return ""
}

func (m *ReqCertificateAdd) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ReqCertificateAdd) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ReqCertificateUpdate struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Tags                 []string `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCertificateUpdate) Reset()         { *m = ReqCertificateUpdate{} }
func (m *ReqCertificateUpdate) String() string { return proto.CompactTextString(m) }
func (*ReqCertificateUpdate) ProtoMessage()    {}
func (*ReqCertificateUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_91a7d151df1fda2d, []int{2}
}

func (m *ReqCertificateUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCertificateUpdate.Unmarshal(m, b)
}
func (m *ReqCertificateUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCertificateUpdate.Marshal(b, m, deterministic)
}
func (m *ReqCertificateUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCertificateUpdate.Merge(m, src)
}
func (m *ReqCertificateUpdate) XXX_Size() int {
	return xxx_messageInfo_ReqCertificateUpdate.Size(m)
}
func (m *ReqCertificateUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCertificateUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCertificateUpdate proto.InternalMessageInfo

func (m *ReqCertificateUpdate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReqCertificateUpdate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqCertificateUpdate) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqCertificateUpdate) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ReqCertificateUpdate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ReplyCertificateInfo struct {
	Status               *ReplyStatus     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *CertificateInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReplyCertificateInfo) Reset()         { *m = ReplyCertificateInfo{} }
func (m *ReplyCertificateInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyCertificateInfo) ProtoMessage()    {}
func (*ReplyCertificateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_91a7d151df1fda2d, []int{3}
}

func (m *ReplyCertificateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCertificateInfo.Unmarshal(m, b)
}
func (m *ReplyCertificateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCertificateInfo.Marshal(b, m, deterministic)
}
func (m *ReplyCertificateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCertificateInfo.Merge(m, src)
}
func (m *ReplyCertificateInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyCertificateInfo.Size(m)
}
func (m *ReplyCertificateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCertificateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCertificateInfo proto.InternalMessageInfo

func (m *ReplyCertificateInfo) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyCertificateInfo) GetInfo() *CertificateInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ReplyCertificateList struct {
	Status               *ReplyStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*CertificateInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReplyCertificateList) Reset()         { *m = ReplyCertificateList{} }
func (m *ReplyCertificateList) String() string { return proto.CompactTextString(m) }
func (*ReplyCertificateList) ProtoMessage()    {}
func (*ReplyCertificateList) Descriptor() ([]byte, []int) {
	return fileDescriptor_91a7d151df1fda2d, []int{4}
}

func (m *ReplyCertificateList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCertificateList.Unmarshal(m, b)
}
func (m *ReplyCertificateList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCertificateList.Marshal(b, m, deterministic)
}
func (m *ReplyCertificateList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCertificateList.Merge(m, src)
}
func (m *ReplyCertificateList) XXX_Size() int {
	return xxx_messageInfo_ReplyCertificateList.Size(m)
}
func (m *ReplyCertificateList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCertificateList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCertificateList proto.InternalMessageInfo

func (m *ReplyCertificateList) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyCertificateList) GetList() []*CertificateInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*CertificateInfo)(nil), "omo.msp.album.CertificateInfo")
	proto.RegisterType((*ReqCertificateAdd)(nil), "omo.msp.album.ReqCertificateAdd")
	proto.RegisterType((*ReqCertificateUpdate)(nil), "omo.msp.album.ReqCertificateUpdate")
	proto.RegisterType((*ReplyCertificateInfo)(nil), "omo.msp.album.ReplyCertificateInfo")
	proto.RegisterType((*ReplyCertificateList)(nil), "omo.msp.album.ReplyCertificateList")
}

func init() {
	proto.RegisterFile("proto/album/certificate.proto", fileDescriptor_91a7d151df1fda2d)
}

var fileDescriptor_91a7d151df1fda2d = []byte{
	// 619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x4e, 0xdb, 0x4c,
	0x10, 0xc5, 0x76, 0x62, 0xc8, 0x84, 0xc0, 0xf7, 0xad, 0x50, 0xb5, 0x8a, 0x4a, 0x65, 0x85, 0x9b,
	0x5c, 0x05, 0x29, 0x7d, 0x02, 0x40, 0x02, 0x51, 0x8a, 0xaa, 0x1a, 0xb5, 0x17, 0xbd, 0x5b, 0xec,
	0x21, 0x5d, 0xd5, 0x7f, 0x78, 0x37, 0x48, 0xb9, 0xe9, 0x55, 0xfb, 0x84, 0x7d, 0x94, 0xbe, 0x40,
	0xb5, 0xbb, 0x8e, 0xb1, 0x8d, 0xf3, 0xa3, 0xf6, 0x6e, 0xcf, 0xcc, 0xd9, 0x33, 0x33, 0x67, 0xc7,
	0x32, 0x1c, 0x67, 0x79, 0x2a, 0xd3, 0x53, 0x16, 0xdd, 0xcf, 0xe3, 0xd3, 0x00, 0x73, 0xc9, 0x1f,
	0x78, 0xc0, 0x24, 0x4e, 0x74, 0x9c, 0x0c, 0xd2, 0x38, 0x9d, 0xc4, 0x22, 0x9b, 0x68, 0xc2, 0x90,
	0xd6, 0xd8, 0x69, 0x1c, 0xa7, 0x89, 0x21, 0x8e, 0x7e, 0xdb, 0x70, 0x78, 0xf1, 0x7c, 0xfd, 0x3a,
	0x79, 0x48, 0xc9, 0x7f, 0xe0, 0xcc, 0x79, 0x48, 0x2d, 0xcf, 0x1a, 0xf7, 0x7c, 0x75, 0x24, 0x07,
	0x60, 0xf3, 0x90, 0xda, 0x9e, 0x35, 0xee, 0xf8, 0x36, 0x0f, 0x09, 0x85, 0xdd, 0x20, 0x47, 0x26,
	0x31, 0xa4, 0x8e, 0x67, 0x8d, 0x1d, 0x7f, 0x09, 0x55, 0x66, 0x9e, 0x85, 0x3a, 0xd3, 0x31, 0x99,
	0x02, 0x96, 0x77, 0xd2, 0x9c, 0x76, 0xb5, 0xf2, 0x12, 0x92, 0x21, 0xec, 0xa5, 0x19, 0xe6, 0x3a,
	0xe5, 0xea, 0x54, 0x89, 0x55, 0x65, 0x91, 0xd0, 0x5d, 0x1d, 0xb5, 0x45, 0x42, 0x08, 0x74, 0x12,
	0x16, 0x23, 0xdd, 0xd3, 0x11, 0x7d, 0x26, 0xaf, 0xc0, 0xcd, 0x31, 0x66, 0xf9, 0x37, 0xda, 0xd3,
	0xd1, 0x02, 0x91, 0x23, 0xe8, 0xf2, 0x98, 0xcd, 0x90, 0x82, 0x0e, 0x1b, 0xa0, 0x14, 0xe4, 0x22,
	0x43, 0xda, 0xf7, 0xac, 0xf1, 0xc0, 0xd7, 0x67, 0xa5, 0x20, 0x24, 0x93, 0x73, 0x41, 0xf7, 0x75,
	0xb4, 0x40, 0x4a, 0x41, 0xc8, 0x45, 0x84, 0x74, 0x60, 0x14, 0x34, 0x50, 0x6c, 0xc9, 0xf2, 0x19,
	0x4a, 0x7a, 0x60, 0xea, 0x19, 0xa4, 0xd9, 0x01, 0x26, 0x48, 0x0f, 0x0b, 0xb6, 0x02, 0xba, 0x1e,
	0x9b, 0x09, 0x7a, 0xe4, 0x39, 0xaa, 0x63, 0x75, 0x1e, 0xfd, 0xb4, 0xe1, 0x7f, 0x1f, 0x1f, 0x2b,
	0xc6, 0x9f, 0x85, 0x61, 0x39, 0x9b, 0xd5, 0x3a, 0x9b, 0x5d, 0x9b, 0xcd, 0xf8, 0xe2, 0x94, 0xbe,
	0x54, 0x3d, 0xec, 0x34, 0x3c, 0x5c, 0x4e, 0xdc, 0xad, 0x4c, 0x5c, 0x4e, 0xe6, 0x36, 0x26, 0x2b,
	0x7c, 0xd8, 0xad, 0xf9, 0xf0, 0x3c, 0xf1, 0x5e, 0xfb, 0xc4, 0xbd, 0xea, 0xc4, 0xab, 0x7d, 0x6f,
	0xfa, 0xf0, 0xc3, 0x82, 0xa3, 0xba, 0x0f, 0x9f, 0xf4, 0xb6, 0xb4, 0xac, 0xe0, 0xd2, 0x1c, 0xbb,
	0xd5, 0x1c, 0xa7, 0x66, 0xce, 0x26, 0x33, 0x9a, 0x6d, 0x7c, 0x57, 0x5d, 0x64, 0xd1, 0xa2, 0xf9,
	0x21, 0x4c, 0x4b, 0x3b, 0x54, 0x23, 0xfd, 0xe9, 0x70, 0x52, 0xfb, 0xac, 0x26, 0xfa, 0xd2, 0x9d,
	0x66, 0x94, 0x56, 0x4d, 0xa1, 0xc3, 0x93, 0x87, 0x54, 0xf7, 0xd9, 0x9f, 0xbe, 0x69, 0xdc, 0x68,
	0x54, 0xf0, 0x35, 0xb7, 0xad, 0xfe, 0x7b, 0x2e, 0xe4, 0xdf, 0xd6, 0x8f, 0xb8, 0x90, 0xd4, 0xf6,
	0x9c, 0x6d, 0xea, 0x2b, 0xee, 0xf4, 0x57, 0x17, 0x48, 0x25, 0x73, 0x87, 0xf9, 0x13, 0x0f, 0x90,
	0x7c, 0x04, 0xf7, 0x2c, 0x0c, 0x3f, 0x24, 0x48, 0xbc, 0x17, 0x85, 0x1b, 0xbb, 0x3b, 0x3c, 0x69,
	0x6b, 0xad, 0x51, 0x6d, 0xb4, 0x43, 0x6e, 0x01, 0xcc, 0x0b, 0x9f, 0x33, 0x81, 0xe4, 0x64, 0xad,
	0xac, 0x21, 0x0e, 0x69, 0x9b, 0x72, 0x21, 0x77, 0x01, 0x3d, 0x1f, 0xe3, 0xf4, 0x09, 0x55, 0x93,
	0x2f, 0xdd, 0x79, 0x9c, 0xa3, 0x90, 0x8a, 0xba, 0x56, 0xe4, 0x06, 0xdc, 0x2b, 0x94, 0x9b, 0x14,
	0xb6, 0x1c, 0xf0, 0x06, 0xdc, 0x3b, 0x64, 0x79, 0xf0, 0xf5, 0x9f, 0xc4, 0xd4, 0xeb, 0x8f, 0x76,
	0xc8, 0x67, 0x38, 0xbc, 0x42, 0xa9, 0xc0, 0xf9, 0xe2, 0x92, 0x47, 0x12, 0x73, 0xf2, 0xba, 0x5d,
	0xd5, 0x64, 0xb7, 0xd5, 0xbd, 0x85, 0xfd, 0x2b, 0x94, 0x6a, 0x71, 0xb8, 0x90, 0x3c, 0xd8, 0x20,
	0x7a, 0xbc, 0x6a, 0xeb, 0xf4, 0xe5, 0xd1, 0x0e, 0x79, 0x07, 0x07, 0xc5, 0xa3, 0x6e, 0xe8, 0x72,
	0x8b, 0x17, 0xbd, 0x86, 0x7d, 0xc3, 0x32, 0x6b, 0x4d, 0x8e, 0x57, 0xb9, 0x28, 0x2f, 0x23, 0x36,
	0x5b, 0x27, 0x75, 0x3e, 0xf8, 0xd2, 0xaf, 0xfc, 0xf6, 0xee, 0x5d, 0x0d, 0xde, 0xfe, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x98, 0x63, 0x60, 0x51, 0x3a, 0x07, 0x00, 0x00,
}
